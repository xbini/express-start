<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Mini Chatroom</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"
        integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/socket.io-client/dist/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dayjs@1.10.4/dayjs.min.js"></script>
    <style>
        html,
        body {
            height: 100%;
            max-height: 100%;
        }

        .main {
            max-height: 100%;
            height: 100%;
            position: relative;
        }

        .title {
            margin: 0 !important;
            padding: 15px;
        }

        .comment {
            overflow: auto;
            scroll-behavior: smooth;
            height: calc(100% - 120px);
            max-height: calc(100% - 120px);
            margin: 10px 0 0 0;
        }

        .comment img.avatar {
            width: 40px;
            height: 40px;
            max-width: 40px;
            max-height: 40px;
            border-radius: 50%;
        }

        .comment li {
            margin-bottom: 10px;
        }

        .comment li:last-of-type {
            margin-bottom: 0;
        }

        .comment .info {
            margin-left: 50px;
        }

        .content-image {
            max-width: 100px;
        }

        .content {
            word-break: break-all;
        }

        .footer {
            position: absolute;
            bottom: 15px;
            width: 100%;
        }

        .p-0 {
            padding: 0;
        }

        .btn {
            text-align: center;
            padding: 0;
        }

        .count {
            color: yellow;
        }

    </style>
</head>

<body>
    <div class="container main bg-info">
        <div class="header row bg-primary">
            <h4 class="col-xs-12 title"> Mini Chatroom <small class="count" id="count"></small></h4>
        </div>
        <ul class="comment list-unstyled" id="comment">
            <!-- render by script -->
        </ul>
        <div class="footer row">
            <div class="col-xs-9">
                <input autofocus class="form-control" label="chat-input" name="chat-input" id="chat-input"></input>
            </div>
            <div class="col-xs-3 text-right">
                <button id="send" type="button" class="form-control btn btn-primary"> Send </button>
            </div>
        </div>
    </div>
</body>
<script>
    (function (window) {
        var commentList = document.querySelector('#comment');
        var sendButton = document.querySelector('#send');
        var textbox = document.querySelector('#chat-input');
        var countEL = document.querySelector('#count');
        var io = window.io;
        var TIME_FORMAT = 'HH:mm:ss';
        var defaultAvatar =
            'https://www.bing.com/th?id=AMMS_53c8f51dc7c2d0f4f64fb1cd68e8bbc9&w=72&h=72&c=7&rs=1&qlt=80&cdv=1&dpr=2&pid=16.1';
        var SOCKET_URL = 'ws://';
        var socket = io(SOCKET_URL, {
            path: '/socket'
        });
        var DEVICE_LIST = ['iphone', 'ipad', 'android'];
        var SOUGOU_IMG_REG = /点击\[(.*)\]查看表情/;
        var avatar = '';
        var timer = -1;
        window.MINI_CHATROOM_TAG = '';

        function parseFooter(userAgent) {
            var result = '';
            var i = userAgent.match(/\(/).index;
            var j = userAgent.match(/\)/).index;
            result = userAgent.substring(i + 1, j);
            return result || 'unknown';
        }

        function parseName(ip, tag) {
            var name = `${tag}-(${ip})`;
            return (name || 'Name').replace('::ffff:', '');
        }

        function parseContent(content) {
            var result = content;
            var matched = content.match(SOUGOU_IMG_REG);
            var url = matched ? matched[1] : undefined;
            if (url) {
                result = "<img class='content-image' src='" + url + "'/>";
            }
            return result || 'this is content';
        }

        function renderComment(comment) {
            var data = {
                avatar: comment.avatar || defaultAvatar,
                selfClass: window.MINI_CHATROOM_TAG === comment.tag ? 'bg-danger' : '',
                name: parseName(comment.ip, comment.tag),
                time: comment.time ? dayjs(comment.time).format(TIME_FORMAT) : dayjs().format(TIME_FORMAT),
                content: parseContent(comment.content),
                footer: parseFooter(comment.userAgent)
            };
            var parser = new DOMParser();
            var template = `
            <li class="clearfix">
                <img class="avatar pull-left"
                    src="{avatar}"
                    alt="avatar" />
                <div class="info">
                    <div>
                        <strong class="text-primary {selfClass}">{name}</strong>
                        <small class="text-muted">{time}</small>
                    </div>
                    <div class="content"> {content} </div>
                    <div class="text-right">
                        <small>from <span class="text-danger">{footer}</span></small>
                    </div>
                </div>
            </li>`;
            var commentString = template;
            Object.keys(data).forEach(function (key) {
                commentString = commentString.replace(`{${key}}`, data[key]);
            });
            return parser.parseFromString(commentString, 'text/html').body.childNodes[0];
        }

        function generateAvatar() {
            var tag = parseInt(Math.random() * 10000000, 10);
            return 'https://avatars.githubusercontent.com/u/' + tag + '?s=60&v=4';
        }

        function updateCount(data) {
            var count = data.count;
            countEL.innerHTML = count + ' people online';
        }

        function send() {
            if (textbox.value.length === 0) {
                return false;
            }
            if (avatar.length === 0) {
                avatar = generateAvatar();
            }
            var data = {
                avatar: avatar,
                time: Date.now(),
                platform: navigator.platform,
                network: navigator.connection.effectiveType,
                userAgent: navigator.userAgent,
                content: textbox.value
            };
            textbox.value = '';
            socket.emit('send-chat-from-client', data);
        }
        socket.on('init', function (message) {
            updateCount(message);
            window.MINI_CHATROOM_TAG = message.tag;
            document.title = 'Mini Chatroom(' + message.tag + ')';
        });
        socket.on('always-push', function (message) {
            updateCount(message);
        });
        socket.on('receive-chat-from-server', function (message) {
            var node = renderComment(message);
            commentList.appendChild(node);
            clearTimeout(timer);
            timer = setTimeout(function () {
                var y = commentList.scrollHeight;
                commentList.scrollTo(0, y);
            }, 20);
        });
        sendButton.addEventListener('click', send);
        textbox.addEventListener('keydown', function (e) {
            if (e.keyCode === 13) {
                send();
            }
        });
        textbox.addEventListener('input', function (e) {
            if (SOUGOU_IMG_REG.test(textbox.value)) {
                send();
            }
        });
    }(window));

</script>

</html>
